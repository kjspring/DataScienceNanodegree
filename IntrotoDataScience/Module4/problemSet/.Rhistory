plot_hist = function(turnstile_weather, rain_type) {
plot = ggplot(turnstile_weather, aes(x=ENTRIESn_hourly)) +
geom_histogram(fill='white', colour='black', binwidth=100) +
ggtitle(paste('Histogram of Entries with', rain_type, 'weather')) +
xlab('entries') +
ylab('frequency')
return(plot)
}
plot_hist(rain, 'rainy') # histogram of rainy days
plot_hist = function(turnstile_weather, rain_type) {
plot = ggplot(turnstile_weather, aes(x=ENTRIESn_hourly)) +
geom_histogram(fill='white', colour='black', binwidth=50) +
ggtitle(paste('Histogram of Entries with', rain_type, 'weather')) +
xlab('entries') +
ylab('frequency')
return(plot)
}
plot_hist(rain, 'rainy') # histogram of rainy days
plot_hist = function(turnstile_weather, rain_type) {
plot = ggplot(turnstile_weather, aes(x=ENTRIESn_hourly)) +
geom_histogram(fill='white', colour='black', binwidth=35) +
ggtitle(paste('Histogram of Entries with', rain_type, 'weather')) +
xlab('entries') +
ylab('frequency')
return(plot)
}
plot_hist(rain, 'rainy') # histogram of rainy days
plot_hist = function(turnstile_weather, rain_type) {
plot = ggplot(turnstile_weather, aes(x=ENTRIESn_hourly)) +
geom_histogram(fill='white', colour='black', binwidth=30) +
ggtitle(paste('Histogram of Entries with', rain_type, 'weather')) +
xlab('entries') +
ylab('frequency')
return(plot)
}
plot_hist(turnstile_weather, 'rainy and not rainy')
plot_hist = function(turnstile_weather, rain_type) {
plot = ggplot(turnstile_weather, aes(x=ENTRIESn_hourly)) +
geom_histogram(fill='white', colour='black', binwidth=5) +
ggtitle(paste('Histogram of Entries with', rain_type, 'weather')) +
xlab('entries') +
ylab('frequency')
return(plot)
}
plot_hist(turnstile_weather, 'rainy and not rainy')
plot_hist = function(turnstile_weather, rain_type) {
plot = ggplot(turnstile_weather, aes(x=ENTRIESn_hourly)) +
geom_histogram(fill='white', colour='black', binwidth=1000) +
ggtitle(paste('Histogram of Entries with', rain_type, 'weather')) +
xlab('entries') +
ylab('frequency')
return(plot)
}
plot_hist(turnstile_weather, 'rainy and not rainy')
plot_hist = function(turnstile_weather, rain_type) {
plot = ggplot(turnstile_weather, aes(x=ENTRIESn_hourly)) +
geom_histogram(fill='white', colour='black', binwidth=10000) +
ggtitle(paste('Histogram of Entries with', rain_type, 'weather')) +
xlab('entries') +
ylab('frequency')
return(plot)
}
plot_hist(turnstile_weather, 'rainy and not rainy')
plot_hist = function(turnstile_weather, rain_type) {
plot = ggplot(turnstile_weather, aes(x=ENTRIESn_hourly)) +
geom_histogram(fill='white', colour='black', binwidth=10000) +
ggtitle(paste('Histogram of Entries with', rain_type, 'weather')) +
xlab('entries') +
ylab('frequency') +
scale_x_continuous(limits = '1000')
return(plot)
}
plot_hist(turnstile_weather, 'rainy and not rainy')
plot_hist = function(turnstile_weather, rain_type) {
plot = ggplot(turnstile_weather, aes(x=ENTRIESn_hourly)) +
geom_histogram(fill='white', colour='black', binwidth=10000) +
ggtitle(paste('Histogram of Entries with', rain_type, 'weather')) +
xlab('entries') +
ylab('frequency') +
scale_x_continuous(limits = c(0,'1000'))
return(plot)
}
plot_hist(turnstile_weather, 'rainy and not rainy')
plot_hist = function(turnstile_weather, rain_type) {
plot = ggplot(turnstile_weather, aes(x=ENTRIESn_hourly)) +
geom_histogram(fill='white', colour='black', binwidth=10000) +
ggtitle(paste('Histogram of Entries with', rain_type, 'weather')) +
xlab('entries') +
ylab('frequency') #+
#scale_x_continuous(limits = c(0,'1000'))
return(plot)
}
plot_hist(turnstile_weather, 'rainy and not rainy')
plot_hist = function(turnstile_weather, rain_type) {
plot = ggplot(turnstile_weather, aes(x=ENTRIESn_hourly)) +
geom_histogram(fill='white', colour='black', binwidth=2000) +
ggtitle(paste('Histogram of Entries with', rain_type, 'weather')) +
xlab('entries') +
ylab('frequency') #+
#scale_x_continuous(limits = c(0,'1000'))
return(plot)
}
plot_hist(turnstile_weather, 'rainy and not rainy')
plot_hist = function(turnstile_weather, rain_type) {
plot = ggplot(turnstile_weather, aes(x=ENTRIESn_hourly)) +
geom_histogram(fill='white', colour='black', binwidth=2000) +
ggtitle(paste('Histogram of Entries with', rain_type, 'weather')) +
xlab('entries') +
ylab('frequency') +
scale_x_continuous(limits = c(-5000, 5000))
return(plot)
}
plot_hist(turnstile_weather, 'rainy and not rainy')
plot_hist = function(turnstile_weather, rain_type) {
plot = ggplot(turnstile_weather, aes(x=ENTRIESn_hourly)) +
geom_histogram(fill='white', colour='black', binwidth=2000) +
ggtitle(paste('Histogram of Entries with', rain_type, 'weather')) +
xlab('entries') +
ylab('frequency') +
scale_x_continuous(limits = c(0, 5000))
return(plot)
}
plot_hist(turnstile_weather, 'rainy and not rainy')
plot_hist = function(turnstile_weather, rain_type) {
plot = ggplot(turnstile_weather, aes(x=ENTRIESn_hourly)) +
geom_histogram(fill='white', colour='black', binwidth=2000) +
ggtitle(paste('Histogram of Entries with', rain_type, 'weather')) +
xlab('entries') +
ylab('frequency') +
scale_x_continuous(limits = c(0, 100000))
return(plot)
}
plot_hist(turnstile_weather, 'rainy and not rainy')
plot_hist = function(turnstile_weather, rain_type) {
plot = ggplot(turnstile_weather, aes(x=ENTRIESn_hourly)) +
geom_histogram(fill='white', colour='black', binwidth=2000) +
ggtitle(paste('Histogram of Entries with', rain_type, 'weather')) +
xlab('entries') +
ylab('frequency') +
#scale_x_continuous(limits = c(0, 100000))
return(plot)
}
plot_hist(turnstile_weather, 'rainy and not rainy')
plot_hist = function(turnstile_weather, rain_type) {
plot = ggplot(turnstile_weather, aes(x=ENTRIESn_hourly)) +
geom_histogram(fill='white', colour='black', binwidth=2000) +
ggtitle(paste('Histogram of Entries with', rain_type, 'weather')) +
xlab('entries') +
ylab('frequency') #+
#scale_x_continuous(limits = c(0, 100000))
return(plot)
}
plot_hist(turnstile_weather, 'rainy and not rainy')
plot_hist(rain, 'rainy') # histogram of rainy days
plot_hist(norain, 'not rainy') # histogram of no rain
plot_hist = function(turnstile_weather, rain_type) {
plot = ggplot(turnstile_weather, aes(x=ENTRIESn_hourly)) +
geom_histogram(fill='white', colour='black', binwidth=20000) +
ggtitle(paste('Histogram of Entries with', rain_type, 'weather')) +
xlab('entries') +
ylab('frequency') #+
#scale_x_continuous(limits = c(0, 100000))
return(plot)
}
plot_hist(turnstile_weather, 'rainy and not rainy')
plot_hist(rain, 'rainy') # histogram of rainy days
plot_hist = function(turnstile_weather, rain_type) {
plot = ggplot(turnstile_weather, aes(x=ENTRIESn_hourly)) +
geom_histogram(fill='white', colour='black', binwidth=50) +
ggtitle(paste('Histogram of Entries with', rain_type, 'weather')) +
xlab('entries') +
ylab('frequency') #+
#scale_x_continuous(limits = c(0, 100000))
return(plot)
}
plot_hist(turnstile_weather, 'rainy and not rainy')
plot_hist = function(turnstile_weather, rain_type) {
plot = ggplot(turnstile_weather, aes(x=ENTRIESn_hourly)) +
geom_histogram(fill='white', colour='black') +
ggtitle(paste('Histogram of Entries with', rain_type, 'weather')) +
xlab('entries') +
ylab('frequency') #+
#scale_x_continuous(limits = c(0, 100000))
return(plot)
}
plot_hist(turnstile_weather, 'rainy and not rainy')
plot_hist = function(turnstile_weather, rain_type) {
plot = ggplot(turnstile_weather, aes(x=ENTRIESn_hourly)) +
geom_histogram(fill='white', colour='black', binwidth=10) +
ggtitle(paste('Histogram of Entries with', rain_type, 'weather')) +
xlab('entries') +
ylab('frequency') #+
#scale_x_continuous(limits = c(0, 100000))
return(plot)
}
plot_hist(turnstile_weather, 'rainy and not rainy')
plot_hist(norain, 'not rainy') # histogram of no rain
plot_time = function(turnstile_weather) {
plot = ggplot(turnstile_weather, aes(Hour, ENTRIESn_hourly, color = UNIT)) +
geom_jitter() + theme(legend.position="none")
return(plot)
}
plot_time(turnstile_weather)
head(turnstile_weather)
plot_dayofweek = function(dat) {
plot = ggplot(dat, aes(x=format(as.Date(DATEn), "%y-%m-%d"), y=ENTRIESn_hourly)) +
geom_jitter()
}
plot_dayofweek(turnstile_weather)
dates = turnstile_weather$DATEn
dates[1]
format(as.Date(dates[1]), '%y-%m-%d')
weekday(format(as.Date(dates[1]), '%y-%m-%d'))
?weekdays
weekdays(format(as.Date(dates[1]), '%y-%m-%d'))
as.Date(dates[1])
weekdays(as.Date(dates[1]))
plot_dayofweek = function(dat) {
plot = ggplot(dat, aes(x=weekdays(as.Date(DATEn)), y=ENTRIESn_hourly)) +
geom_jitter()
}
plot_dayofweek(turnstile_weather)
plot_dayofweek = function(dat) {
plot = ggplot(dat, aes(weekdays(as.Date(DATEn)), ENTRIESn_hourly)) +
geom_jitter()
}
plot_dayofweek(turnstile_weather)
plot_time(turnstile_weather)
plot_dayofweek = function(dat) {
plot = ggplot(dat, aes(weekdays(as.Date(DATEn)), ENTRIESn_hourly)) +
geom_point()
}
plot_dayofweek(turnstile_weather)
plot_dayofweek = function(dat) {
plot = ggplot(dat, aes(factor(weekdays(as.Date(DATEn))), ENTRIESn_hourly)) +
geom_point()
}
plot_dayofweek(turnstile_weather)
plot_dayofweek = function(dat) {
plot = ggplot(dat, aes(factor(weekdays(as.Date(DATEn))), ENTRIESn_hourly)) +
geom_barplot()
}
plot_dayofweek(turnstile_weather)
plot_dayofweek = function(dat) {
plot = ggplot(dat, aes(factor(weekdays(as.Date(DATEn))), ENTRIESn_hourly)) +
geom_bar()
}
plot_dayofweek(turnstile_weather)
plot_dayofweek = function(dat) {
plot = ggplot(dat, aes(factor(weekdays(as.Date(DATEn))), ENTRIESn_hourly)) +
geom_bar()
return plot
}
plot_dayofweek(turnstile_weather)
plot_dayofweek = function(dat) {
plot = ggplot(dat, aes(factor(weekdays(as.Date(DATEn))), ENTRIESn_hourly)) +
geom_bar()
return(plot)
}
plot_dayofweek(turnstile_weather)
plot_dayofweek = function(dat) {
plot = ggplot(dat, aes(factor(weekdays(as.Date(DATEn))), ENTRIESn_hourly)) +
geom_jitter()
return(plot)
}
plot_dayofweek(turnstile_weather)
plot_dayofweek = function(dat) {
plot = ggplot(dat, aes(factor(weekdays(as.Date(DATEn))), ENTRIESn_hourly)) +
geom_bar()
return(plot)
}
plot_dayofweek(turnstile_weather)
plot_dayofweek = function(dat) {
plot = ggplot(dat, aes(factor(weekdays(as.Date(DATEn))), ENTRIESn_hourly)) +
geom_boxplot()
return(plot)
}
plot_dayofweek(turnstile_weather)
?log2_trans()
plot_dayofweek = function(dat) {
plot = ggplot(dat, aes(factor(weekdays(as.Date(DATEn))), ENTRIESn_hourly)) +
geom_boxplot() +
scale_y_continuous(trans=log_trans(10))
return(plot)
}
plot_dayofweek(turnstile_weather)
plot_dayofweek = function(dat) {
plot = ggplot(dat, aes(factor(weekdays(as.Date(DATEn))), ENTRIESn_hourly)) +
geom_boxplot() +
scale_y_continuous(trans=log10))
return(plot)
}
plot_dayofweek(turnstile_weather)
plot_dayofweek = function(dat) {
plot = ggplot(dat, aes(factor(weekdays(as.Date(DATEn))), ENTRIESn_hourly)) +
geom_boxplot() +
scale_y_continuous(log10))
return(plot)
}
plot_dayofweek(turnstile_weather)
plot_dayofweek = function(dat) {
plot = ggplot(dat, aes(factor(weekdays(as.Date(DATEn))), ENTRIESn_hourly)) +
geom_boxplot() +
scale_y_log10()
return(plot)
}
plot_dayofweek(turnstile_weather)
trunstile_weather$ENTRIESn_hourly == 0
turnstile_weather$ENTRIESn_hourly == 0
turnstile_weather$ENTRIESn_hourly == 0 = 1
turnstile_weather[which(turnstile_weather$ENTRIESn_hourly == 0), ]
turnstile_weather[which(turnstile_weather$ENTRIESn_hourly == 0), ]$ENTRIESn_hourly = 1
which(turnstile_weather$ENTRIESn_hourly == 0
)
rain = turnstile_weather[turnstile_weather$rain == 1, ]
norain = turnstile_weather[turnstile_weather$rain == 0, ]
plot_dayofweek = function(dat) {
plot = ggplot(dat, aes(factor(weekdays(as.Date(DATEn))), ENTRIESn_hourly)) +
geom_boxplot() +
scale_y_log10()
return(plot)
}
plot_dayofweek(turnstile_weather)
turnstile_weather = read.csv('turnstile_data_master_with_weather.csv')
# add 1 to any 0 Entries data
turnstile_weather$ENTRIESn_hourly = turnstile_weather$ENTRIESn_hourly + 1
rain = turnstile_weather[turnstile_weather$rain == 1, ]
norain = turnstile_weather[turnstile_weather$rain == 0, ]
plot_dayofweek = function(dat) {
plot = ggplot(dat, aes(factor(weekdays(as.Date(DATEn))), ENTRIESn_hourly)) +
geom_boxplot() +
scale_y_log10()
return(plot)
}
plot_dayofweek(turnstile_weather)
plot_dayofweek = function(dat) {
dat$DATEn = with(dat, reorder(DATEn, DATEn, function(x) -length(x)))
plot = ggplot(dat, aes(factor(weekdays(as.Date(DATEn))), ENTRIESn_hourly)) +
geom_boxplot() +
scale_y_log10() +
return(plot)
}
plot_dayofweek(turnstile_weather)
plot_dayofweek = function(dat) {
dat$DATEn = with(dat, reorder(DATEn, DATEn, function(x) -length(x)))
plot = ggplot(dat, aes(factor(weekdays(as.Date(DATEn))), ENTRIESn_hourly)) +
geom_boxplot() +
scale_y_log10()
return(plot)
}
plot_dayofweek(turnstile_weather)
?weekdays
dat
weekdays(dates[1])
weekdays(as.Date(dates[1]))
weekdays(as.Date(dates[1]), abbreviate=T)
plot_dayofweek = function(dat) {
weekday = c('Mon', 'Tues', 'Wed', 'Thurs', 'Fri', 'Sat', 'Sun')
plot = ggplot(dat, aes(factor(weekdays(as.Date(DATEn), abbreviate=T), levels = weekday), ENTRIESn_hourly)) +
geom_boxplot() +
scale_y_log10()
return(plot)
}
plot_dayofweek(turnstile_weather)
plot_dayofweek = function(dat) {
plot = ggplot(dat, aes(factor(weekdays(as.Date(DATEn), abbreviate=T), levels = c('Mon', 'Tues', 'Wed', 'Thurs', 'Fri', 'Sat', 'Sun')), ENTRIESn_hourly)) +
geom_boxplot() +
scale_y_log10()
return(plot)
}
plot_dayofweek(turnstile_weather)
plot_dayofweek = function(dat) {
dat$DATEn = factor(weekdays(as.Date(dat$DATEn), abbreviate=T), levels = c('Mon', 'Tues', 'Wed', 'Thurs', 'Fri', 'Sat', 'Sun')
plot = ggplot(dat, aes(DATEn, ENTRIESn_hourly)) +
geom_boxplot() +
scale_y_log10()
return(plot)
}
plot_dayofweek(turnstile_weather)
plot_dayofweek = function(dat) {
dat$DATEn = factor(weekdays(as.Date(dat$DATEn), abbreviate=T), levels = c('Mon', 'Tues', 'Wed', 'Thurs', 'Fri', 'Sat', 'Sun'))
plot = ggplot(dat, aes(DATEn, ENTRIESn_hourly)) +
geom_boxplot() +
scale_y_log10()
return(plot)
}
plot_dayofweek(turnstile_weather)
plot_dayofweek = function(dat) {
dat$DATEn = factor(weekdays(as.Date(dat$DATEn), abbreviate=T), levels = c('Mon', 'Tue', 'Wed', 'Thur', 'Fri', 'Sat', 'Sun'))
plot = ggplot(dat, aes(DATEn, ENTRIESn_hourly)) +
geom_boxplot() +
scale_y_log10() +
xlab('Weekday') +
ylab('Hourly entries') +
ggtitle('Daily subway ridership')
return(plot)
}
plot_dayofweek(turnstile_weather)
as.Date(2014-12-25)
as.Date('2014-12-25')
weekdays(as.Date('2014-12-25'))
weekdays(as.Date('2014-12-25'), abbreviate=T)
plot_dayofweek = function(dat) {
dat$DATEn = factor(weekdays(as.Date(dat$DATEn), abbreviate=T), levels = c('Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'))
plot = ggplot(dat, aes(DATEn, ENTRIESn_hourly)) +
geom_boxplot() +
scale_y_log10() +
xlab('Weekday') +
ylab('Hourly entries') +
ggtitle('Daily subway ridership')
return(plot)
}
plot_dayofweek(turnstile_weather)
turnstile_weather$ENTRIESn_hourly[1]
log10(turnstile_weather$ENTRIESn_hourly[1])
turnstile_weather$ENTRIESn_hourly = log10(turnstile_weather$ENTRIESn_hourly)
hist(turnstile_weather$ENTRIESn_hourly)
rain = turnstile_weather[turnstile_weather$rain == 1, ]
norain = turnstile_weather[turnstile_weather$rain == 0, ]
hist(rain$ENTRIESn_hourly)
hist(norain$ENTRIESn_hourly)
?t.test
t.test(rain$ENTRIESn_hourly, norain$ENTRIESn_hourly)
?ln
?log
turnstile_weather$ENTRIESn_hourly = log(turnstile_weather$ENTRIESn_hourly)
rain = turnstile_weather[turnstile_weather$rain == 1, ]
norain = turnstile_weather[turnstile_weather$rain == 0, ]
hist(turnstile_weather$ENTRIESn_hourly)
hist(rain$ENTRIESn_hourly)
# add 1 to any 0 Entries data
turnstile_weather$ENTRIESn_hourly = turnstile_weather$ENTRIESn_hourly + 1
rain = turnstile_weather[turnstile_weather$rain == 1, ]
norain = turnstile_weather[turnstile_weather$rain == 0, ]
plot_rainvsnorain = function(turnstile_weather) {
plot = ggplot(turnstile_weather, aes(x=factor(rain), y=ENTRIESn_hourly)) +
geom_bar(stat = 'identity', colour='black') +
ggtitle('Number of entries, rainy vs not rainy') +
xlab(c('weather', 'No. of entries')) +
scale_x_discrete(breaks=c("0", "1"), labels=c('not rainy', 'rainy'))
return(plot)
}
plot_rainvsnorain(turnstile_weather)
setwd('/home/kevin/Dropbox/courses/Udacity/DataScience/IntrotoDataScience/Module4/problemSet')
turnstile_weather = read.csv('turnstile_data_master_with_weather.csv')
# add 1 to any 0 Entries data
turnstile_weather$ENTRIESn_hourly = turnstile_weather$ENTRIESn_hourly + 1
rain = turnstile_weather[turnstile_weather$rain == 1, ]
norain = turnstile_weather[turnstile_weather$rain == 0, ]
# plot the number of rainy versus non-rainy times
plot_rainvsnorain = function(turnstile_weather) {
plot = ggplot(turnstile_weather, aes(x=factor(rain), y=ENTRIESn_hourly)) +
geom_bar(stat = 'identity', colour='black') +
ggtitle('Number of entries, rainy vs not rainy') +
xlab(c('weather', 'No. of entries')) +
scale_x_discrete(breaks=c("0", "1"), labels=c('not rainy', 'rainy'))
return(plot)
}
plot_rainvsnorain(turnstile_weather)
plot_rainvsnorain = function(turnstile_weather) {
plot = ggplot(turnstile_weather, aes(x=factor(rain), y=ENTRIESn_hourly)) +
geom_bar(stat = 'identity', colour='black') +
ggtitle('Number of entries, rainy vs not rainy') +
xlab(c('weather', 'No. of entries')) +
scale_x_discrete(breaks=c("0", "1"), labels=c('not rainy', 'rainy')) +
scale_x_log10()
return(plot)
}
plot_rainvsnorain(turnstile_weather)
plot_rainvsnorain = function(turnstile_weather) {
plot = ggplot(turnstile_weather, aes(x=factor(rain), y=ENTRIESn_hourly)) +
geom_bar(stat = 'identity', colour='black') +
ggtitle('Number of entries, rainy vs not rainy') +
xlab(c('weather', 'No. of entries')) +
scale_x_discrete(breaks=c("0", "1"), labels=c('not rainy', 'rainy')) +
scale_y_log10()
return(plot)
}
plot_rainvsnorain(turnstile_weather)
turnstile_weather = read.csv('turnstile_data_master_with_weather.csv')
turnstile_weather$ENTRIESn_hourly = turnstile_weather$ENTRIESn_hourly + 1
where(turnstile_weather$ENTRIESn_hourly == 0)
which(turnstile_weather$ENTRIESn_hourly == 0)
which(turnstile_weather$ENTRIESn_hourly == 1)
plot_rainvsnorain = function(turnstile_weather) {
plot = ggplot(turnstile_weather, aes(x=factor(rain), y=ENTRIESn_hourly)) +
geom_bar(stat = 'identity', colour='black') +
ggtitle('Number of entries, rainy vs not rainy') +
xlab(c('weather', 'No. of entries')) +
scale_x_discrete(breaks=c("0", "1"), labels=c('not rainy', 'rainy')) +
scale_y_log10()
return(plot)
}
plot_rainvsnorain(turnstile_weather)
plot_rainvsnorain = function(turnstile_weather) {
plot = ggplot(turnstile_weather, aes(x=factor(rain), y=ENTRIESn_hourly)) +
geom_bar(stat = 'identity', colour='black') +
ggtitle('Number of entries, rainy vs not rainy') +
xlab(c('weather', 'No. of entries')) +
scale_x_discrete(breaks=c("0", "1"), labels=c('not rainy', 'rainy'))
return(plot)
}
plot_rainvsnorain(turnstile_weather)
max(turnstile_weather$ENTRIESn_hourly)
sum(rain$ENTRIESn_hourly)
rain = turnstile_weather[turnstile_weather$rain == 1, ]
norain = turnstile_weather[turnstile_weather$rain == 0, ]
rain = turnstile_weather[turnstile_weather$rain == 1, ]
sum(rain$ENTRIESn_hourly)
sum(norain$ENTRIESn_hourly)
sum(norain$ENTRIESn_hourly) / sum(norain$ENTRIESn_hourly)
sum(norain$ENTRIESn_hourly) / 2
